// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaContas.Data;

#nullable disable

namespace SistemaContas.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220501020727_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.4");

            modelBuilder.Entity("SistemaContas.Models.Bills", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FinalDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("InitialDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<double>("TotalValue")
                        .HasColumnType("REAL");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Value")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("SistemaContas.Models.Debts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateExpired")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Value")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Debts");
                });

            modelBuilder.Entity("SistemaContas.Models.Earning", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("EarningDay")
                        .HasColumnType("REAL");

                    b.Property<double>("EarningYear")
                        .HasColumnType("REAL");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Earning");
                });

            modelBuilder.Entity("SistemaContas.Models.Goal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Value")
                        .HasColumnType("REAL");

                    b.Property<double>("ValueGoal")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("goal");
                });

            modelBuilder.Entity("SistemaContas.Models.Note", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Note");
                });

            modelBuilder.Entity("SistemaContas.Models.Note2", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Note2");
                });

            modelBuilder.Entity("SistemaContas.Models.Note3", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Note3");
                });

            modelBuilder.Entity("SistemaContas.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("SistemaContas.Models.Bills", b =>
                {
                    b.HasOne("SistemaContas.Models.User", null)
                        .WithMany("Bills")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SistemaContas.Models.Debts", b =>
                {
                    b.HasOne("SistemaContas.Models.User", null)
                        .WithMany("Debts")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SistemaContas.Models.Earning", b =>
                {
                    b.HasOne("SistemaContas.Models.User", null)
                        .WithMany("Earnings")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SistemaContas.Models.Goal", b =>
                {
                    b.HasOne("SistemaContas.Models.User", null)
                        .WithMany("Goal")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SistemaContas.Models.Note", b =>
                {
                    b.HasOne("SistemaContas.Models.User", null)
                        .WithMany("Notes")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SistemaContas.Models.Note2", b =>
                {
                    b.HasOne("SistemaContas.Models.User", null)
                        .WithMany("Notes2")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SistemaContas.Models.Note3", b =>
                {
                    b.HasOne("SistemaContas.Models.User", null)
                        .WithMany("Notes3")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SistemaContas.Models.User", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("Debts");

                    b.Navigation("Earnings");

                    b.Navigation("Goal");

                    b.Navigation("Notes");

                    b.Navigation("Notes2");

                    b.Navigation("Notes3");
                });
#pragma warning restore 612, 618
        }
    }
}
